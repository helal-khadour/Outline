[{"C:\\Users\\jafar\\Desktop\\outline\\src\\index.js":"1","C:\\Users\\jafar\\Desktop\\outline\\src\\App.js":"2","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\home.js":"3","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\tags\\tags.js":"4","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\appBar.js":"5","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\individualArticle.js":"6","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\allArticles.js":"7","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\individualCourse.js":"8","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\createCourse.js":"9","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\profile\\Profile.js":"10","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\coursesDashboard.js":"11","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\PurchasedCourse.js":"12","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\NewsFeed\\NewsFeed.js":"13","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\AddVideos.js":"14","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\MyCourses.js":"15","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\AllCourses.js":"16","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\Banker.js":"17","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SignIn.js":"18","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\theme\\Theme.js":"19","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SignUpInstructor.js":"20","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\error\\NetworkDetector.js":"21","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\error\\NotFound.js":"22","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SingUp.js":"23","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\Home.js":"24","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\PurchasedCourse.js":"25","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\newsfeed\\NewsFeed.js":"26","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\ExploreCourses.js":"27","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\CoursesDashboard.js":"28","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\CreateCourse.js":"29","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\IndividualCourse.js":"30","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\AllArticles.js":"31","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\IndividualArticle.js":"32","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\AddVideos.js":"33","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\Banker.js":"34","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\AppBar.js":"35"},{"size":331,"mtime":1616724082067,"results":"36","hashOfConfig":"37"},{"size":1195,"mtime":1630850046557,"results":"38","hashOfConfig":"37"},{"size":8539,"mtime":1630198360826,"results":"39","hashOfConfig":"37"},{"size":4022,"mtime":1630157569915,"results":"40","hashOfConfig":"37"},{"size":3254,"mtime":1630090275345,"results":"41","hashOfConfig":"37"},{"size":3647,"mtime":1629511379831,"results":"42","hashOfConfig":"37"},{"size":4549,"mtime":1630196660165,"results":"43","hashOfConfig":"37"},{"size":9041,"mtime":1630218202619,"results":"44","hashOfConfig":"37"},{"size":16910,"mtime":1630196359478,"results":"45","hashOfConfig":"37"},{"size":1813,"mtime":1617060927436,"results":"46","hashOfConfig":"37"},{"size":10946,"mtime":1630223909988,"results":"47","hashOfConfig":"37"},{"size":5997,"mtime":1629806516323,"results":"48","hashOfConfig":"37"},{"size":6098,"mtime":1630078013446,"results":"49","hashOfConfig":"37"},{"size":7655,"mtime":1630196163786,"results":"50","hashOfConfig":"37"},{"size":3308,"mtime":1627048033742,"results":"51","hashOfConfig":"37"},{"size":3639,"mtime":1630198285962,"results":"52","hashOfConfig":"37"},{"size":1867,"mtime":1629625156731,"results":"53","hashOfConfig":"37"},{"size":8996,"mtime":1630870649000,"results":"54","hashOfConfig":"37"},{"size":1169,"mtime":1630796941431,"results":"55","hashOfConfig":"37"},{"size":10932,"mtime":1630798686555,"results":"56","hashOfConfig":"37"},{"size":2002,"mtime":1630797018121,"results":"57","hashOfConfig":"37"},{"size":1949,"mtime":1630798316551,"results":"58","hashOfConfig":"37"},{"size":11473,"mtime":1630798723573,"results":"59","hashOfConfig":"37"},{"size":8592,"mtime":1630849962845,"results":"60","hashOfConfig":"37"},{"size":6000,"mtime":1630798500079,"results":"61","hashOfConfig":"37"},{"size":6098,"mtime":1630078013446,"results":"62","hashOfConfig":"37"},{"size":3642,"mtime":1630798492719,"results":"63","hashOfConfig":"37"},{"size":10952,"mtime":1630798465017,"results":"64","hashOfConfig":"37"},{"size":16920,"mtime":1630798512673,"results":"65","hashOfConfig":"37"},{"size":9044,"mtime":1630798482557,"results":"66","hashOfConfig":"37"},{"size":4550,"mtime":1630798601817,"results":"67","hashOfConfig":"37"},{"size":3379,"mtime":1630798623911,"results":"68","hashOfConfig":"37"},{"size":7655,"mtime":1630196163786,"results":"69","hashOfConfig":"37"},{"size":1867,"mtime":1629625156731,"results":"70","hashOfConfig":"37"},{"size":3268,"mtime":1630849997301,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"167j89x",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},"C:\\Users\\jafar\\Desktop\\outline\\src\\index.js",[],["160","161"],"C:\\Users\\jafar\\Desktop\\outline\\src\\App.js",["162","163"],"import React,{useEffect, useState} from \"react\";\r\nimport Home from \"./components/home/Home\";\r\nimport SingUp from \"./components/authentication/SingUp\";\r\nimport SignIn from \"./components/authentication/SignIn\";\r\nimport NetworkDetector from \"./components/error/NetworkDetector\";\r\nimport NotFound from \"./components/error/NotFound\";\r\nimport SingUpInstructor from \"./components/authentication/SignUpInstructor\";\r\nimport Tags from \"./components/tags/tags\";\r\nimport { BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/Home\">\r\n            {\r\n              localStorage.getItem(\"token\") ? <Home/> : <Redirect to=\"/signin\"/>\r\n            }\r\n          </Route>\r\n          <Route path=\"/signup\" component={SingUp}></Route>\r\n          <Route path=\"/singupinstructor\" component={SingUpInstructor}></Route>\r\n          <Route path=\"/signin\" exact component={SignIn}></Route>\r\n          <Route path=\"/tags\" exact component={Tags}></Route>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\nexport default NetworkDetector(App);\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\home.js",["164"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\tags\\tags.js",["165"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  MainSection:{\r\n      height:\"90vh\",\r\n    width: '80vw'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    backgroundColor: \"#bbbbbb\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  tags: {\r\n    dispaly: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"60vw\",\r\n    height: \"40vh\",\r\n  },\r\n  selected: {\r\n    backgroundColor: \"#272727\",\r\n  },\r\n  tagsBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst Articles = () => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [selected, setSelected] = React.useState(0);\r\n  useEffect(() => {\r\n    const getTags = async () => {\r\n      const response = await axios.get(\"/tags\").catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      console.log(response);\r\n      setResults(response.data);\r\n      setLoading(true);\r\n    };\r\n    getTags();\r\n  }, []);\r\n\r\n  const updateTags = () => {\r\n    const addTags = async () => {\r\n      var data = {\r\n        tags: tags,\r\n      };\r\n      console.log(tags);\r\n      const response = await axios\r\n        .patch(\"users/me\", data)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(response);\r\n    };\r\n    addTags();\r\n  };\r\n\r\n  const renderTags = results.map((result, index) => {\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <Grid item xs={12} lg={12} md={12} sm={12} xs={12}>\r\n          <Chip\r\n            label={result.name}\r\n            clickable\r\n            color={selected ? 'secondary' : \"primary\"}\r\n            onClick={() => {\r\n              setSelected(index);\r\n              setTags((tags) => [...tags, result._id]);\r\n            }}\r\n          />\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n    <div className={classes.MainSection}>\r\n      <CssBaseline />\r\n      {/* <Grid container>\r\n        <Grid item xs={12}>\r\n          <div className={classes.heroBox}>\r\n            <Typography variant=\"h2\">Atricles</Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid> */}\r\n      <Typography>Technology Tags That Interest You</Typography>\r\n      <Typography>\r\n        Picking tags will help us show you much more reverent Post.\r\n      </Typography>\r\n      {/* <TextField\r\n        label=\"Search tags\"\r\n        id=\"outlined-size-small\"\r\n        variant=\"outlined\"\r\n        style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n        value={seacrchValue}\r\n        size=\"small\"\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton>\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        onChange={(e) => setSeacrchValue(e.target.value)}\r\n      /> */}\r\n      <div className={classes.tagsBox}>\r\n        {loading ? (\r\n          <div className={classes.tags}>{renderTags}</div>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={updateTags}>\r\n          Primary\r\n        </Button>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Articles;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\appBar.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\individualArticle.js",["166","167","168","169","170","171","172"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\allArticles.js",["173","174"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\individualCourse.js",["175","176","177","178"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\createCourse.js",["179","180","181"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\profile\\Profile.js",["182"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n      background:'#F8F9FA'\r\n    },\r\n    image: {\r\n      // backgroundImage: `url(${background})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:'#ffffff',\r\n      // backgroundSize: 'cover',\r\n      backgroundPosition: 'Right',\r\n      Width: 'auto',\r\n      maxHeight: '100%'\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    centerOutline: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    rightOutline:{\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n        <CssBaseline/>\r\n        <Grid container xs={12} style={{backgroundColor:\"#F8F9FA\"}}>\r\n            <Grid container  xs={3} style={{backgroundColor:\"#FFF\"}}>\r\n                <Grid item>\r\n                    <Avatar />\r\n                    <Typography variant=\"h6\">Milad awad</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={9}></Grid>\r\n\r\n        </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Profile;","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\coursesDashboard.js",["183","184","185","186","187","188","189"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\PurchasedCourse.js",["190","191","192","193","194","195","196"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\NewsFeed\\NewsFeed.js",["197","198"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\AddVideos.js",["199"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\MyCourses.js",["200","201"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\AllCourses.js",["202"],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\Courses\\Banker.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SignIn.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\theme\\Theme.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SignUpInstructor.js",["203"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ReactComponent as FormTop } from \"../../img/formTop.svg\";\r\nimport AuthBG from \"../../img/authBG.svg\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport color from \"../theme/Theme\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  centerOutline: {\r\n    height: \"100%\",\r\n    background: \"#ffffff\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rightOutline: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(10, 0, 2),\r\n  },\r\n  img: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    objectPosition: \"center top\",\r\n    objectFit: \"contain\",\r\n  },\r\n  boxLoading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"#272727\",\r\n    position: \"absolute\",\r\n    marginTop: \"10px\",\r\n  },\r\n  instButton: {\r\n    backgroundColor: \"#FFE269\",\r\n    marginTop: \"15px\",\r\n  },\r\n  instSection: {\r\n    backgroundColor: \"#FFF6D1\",\r\n    width: \"100%\",\r\n    padding: \"20px 30px\",\r\n    marginTop: \"50px\",\r\n    borderRadius: \"5px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nexport default function SingUpInstructor() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n  const [signup, setSignup] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [validate, setValidate] = useState({\r\n    errName: false,\r\n    errName: \"\",\r\n    errEmail: false,\r\n    textEmail: \"\",\r\n    errPassword: false,\r\n    textPassword: \"\",\r\n    errConfirm: false,\r\n    textConfirm: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    Transition: Slide,\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem(\"token\")) {\r\n      localStorage.clear();\r\n    }\r\n    if (!navigator.onLine) {\r\n      setState({ ...state, open: true });\r\n      setErr(\"Your Are Offline, Check from Connect\");\r\n    } else if (\r\n      validate.errEmail ||\r\n      validate.errPassword ||\r\n      validate.errConfirm ||\r\n      validate.errName\r\n    ) {\r\n      setState({ ...state, open: true });\r\n      setErr(\"enter value\");\r\n    } else {\r\n      setLoading(true);\r\n      const data = {\r\n        name: signup.name,\r\n        email: signup.email,\r\n        password: signup.password,\r\n      };\r\n      axios\r\n        .post(\"users-instructor\", data)\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          setLoading(false);\r\n          history.push(\"/Home\", { from: \"SingUp\" });\r\n        })\r\n        .catch((err) => {\r\n          setState({ ...state, open: true });\r\n          setErr(err.response.data.error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  const validationName = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errName: true,\r\n        textName: \"username input required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errName: false,\r\n        textName: \"\",\r\n      });\r\n    setSignup({ ...signup, name: e.target.value });\r\n  };\r\n  const validationEmail = (e) => {\r\n    setSignup({ ...signup, email: e.target.value });\r\n    if (!validateEmail(e.target.value) && e.target.value !== \"\")\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: true,\r\n        textEmail: \"Inter valid email\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: true,\r\n        textEmail: \"Email input required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: false,\r\n        textEmail: \"\",\r\n      });\r\n  };\r\n  const validationPassword = (e) => {\r\n    setSignup({ ...signup, password: e.target.value });\r\n    if (e.target.value !== \"\" && e.target.value.length < 8)\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: true,\r\n        textPassword: \"The password must be at least 8 characters\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: true,\r\n        textPassword: \"password input required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: false,\r\n        textPassword: \"\",\r\n      });\r\n  };\r\n  const validationConfirmPassword = (e) => {\r\n    setSignup({ ...signup, confirmPassword: e.target.value });\r\n    if (e.target.value !== signup.password)\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: true,\r\n        textConfirm: \"not matched\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: true,\r\n        textConfirm: \" confirm password input is required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: false,\r\n        textConfirm: \"\",\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={color}>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid\r\n          className={classes.centerOutline}\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={5}\r\n          lg={4}\r\n        >\r\n          <FormTop />\r\n          <Box className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n              Welcome Back\r\n            </Typography>\r\n            <Typography component=\"h1\" variant=\"body1\">\r\n              Login your account\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                error={validate.errName}\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Username\"\r\n                name=\"name\"\r\n                helperText={validate.textName}\r\n                value={signup.name}\r\n                onChange={(e) => validationName(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                error={validate.errEmail}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                helperText={validate.textEmail}\r\n                value={signup.email}\r\n                onChange={(e) => validationEmail(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                error={validate.errPassword}\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                helperText={validate.textPassword}\r\n                value={signup.password}\r\n                onChange={(e) => validationPassword(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                error={validate.errConfirm}\r\n                id=\"confirmPassword\"\r\n                autoComplete=\"current-password\"\r\n                helperText={validate.textConfirm}\r\n                value={signup.confirmPassword}\r\n                onChange={(e) => validationConfirmPassword(e)}\r\n              />\r\n              <div className={classes.boxLoading}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={classes.submit}\r\n                >\r\n                  Sign Up as instructor\r\n                </Button>\r\n                {loading && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n              <Grid container>\r\n                <Grid item xs></Grid>\r\n                <Grid\r\n                  item\r\n                  onClick={() => history.push(\"/Signin\", { from: \"signin\" })}\r\n                >\r\n                  <Link className={classes.center} href=\"#\" variant=\"body2\">\r\n                    {\"Already have an account? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Hidden only={[\"sm\", \"xs\"]}>\r\n          <Grid\r\n            item\r\n            md={7}\r\n            lg={8}\r\n            style={{ height: \"100vh\", background: \"#fff\" }}\r\n            container\r\n          >\r\n            <img src={AuthBG} alt=\"BG\" className={classes.img} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical, horizontal }}\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={state.Transition}\r\n          message={err}\r\n          key={vertical + horizontal}\r\n        />\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\error\\NetworkDetector.js",["204"],"import React, { Component } from 'react';\r\n\r\nconst mystyle = {\r\n  box: {\r\n  display: 'flex',\r\n  position: 'fixed',\r\n  top: 30,\r\n  zIndex: \"5\",\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  color: \"white\",\r\n  padding: \"2px\",\r\n  fontSize: \"16px\",\r\n  width: \"100vw\",\r\n  height: \"30px\",\r\n  },\r\n  text: {\r\n    backgroundColor: \"red\",\r\n    padding: \"0px 60px\",\r\n    borderRadius: \"5px\"\r\n  }\r\n}\r\n\r\nexport default function (ComposedComponent) {\r\n  class NetworkDetector extends Component {\r\n    state = {\r\n      isDisconnected: false\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.handleConnectionChange();\r\n      window.addEventListener('online', this.handleConnectionChange);\r\n      window.addEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('online', this.handleConnectionChange);\r\n      window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n\r\n    handleConnectionChange = () => {\r\n      const condition = navigator.onLine ? 'online' : 'offline';\r\n      if (condition === 'online') {\r\n        const webPing = setInterval(\r\n          () => {\r\n            fetch('//google.com', {\r\n              mode: 'no-cors',\r\n              })\r\n            .then(() => {\r\n              this.setState({ isDisconnected: false }, () => {\r\n                return clearInterval(webPing)\r\n              });\r\n            }).catch(() => this.setState({ isDisconnected: true }) )\r\n          }, 2000);\r\n        return;\r\n      }\r\n\r\n      return this.setState({ isDisconnected: true });\r\n    }\r\n\r\n    render() {\r\n      const { isDisconnected } = this.state;\r\n      return (\r\n        <div>\r\n          { isDisconnected && (<div style={mystyle.box}>\r\n            <div style={mystyle.text}>\r\n              <p>Internet connection lost</p>\r\n            </div>\r\n            </div>\r\n            )\r\n          }\r\n          <ComposedComponent {...this.props} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return NetworkDetector;\r\n}","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\error\\NotFound.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\authentication\\SingUp.js",["205"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ReactComponent as FormTop } from \"../../img/formTop.svg\";\r\nimport AuthBG from \"../../img/authBG.svg\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport color from \"../theme/Theme\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  centerOutline: {\r\n    height: \"100\",\r\n    background: \"#ffffff\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rightOutline: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  img: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    objectPosition: \"center top\",\r\n    objectFit: \"contain\",\r\n  },\r\n  boxLoading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"#272727\",\r\n    position: \"absolute\",\r\n    marginTop: \"10px\",\r\n  },\r\n  instButton: {\r\n    backgroundColor: \"#FFE269\",\r\n    marginTop: \"15px\",\r\n  },\r\n  instSection: {\r\n    backgroundColor: \"#FFF6D1\",\r\n    width: \"100%\",\r\n    padding: \"20px 30px\",\r\n    marginTop: \"70px\",\r\n    borderRadius: \"5px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nexport default function SingUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n  const [signup, setSignup] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [validate, setValidate] = useState({\r\n    errName: false,\r\n    errName: \"\",\r\n    errEmail: false,\r\n    textEmail: \"\",\r\n    errPassword: false,\r\n    textPassword: \"\",\r\n    errConfirm: false,\r\n    textConfirm: \"\",\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    Transition: Slide,\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (localStorage.getItem('token')){\r\n        localStorage.clear();\r\n    }\r\n    \r\n    if (!navigator.onLine) {\r\n      setState({ ...state, open: true });\r\n      setErr(\"Your Are Offline, Check from Connect\");\r\n    } else if (validate.errEmail || validate.errPassword || validate.errConfirm || validate.errName ) {\r\n      setState({ ...state, open: true });\r\n      setErr(\"enter value\");\r\n    } else {\r\n      setLoading(true);\r\n      const data = {\r\n        name: signup.name,\r\n        email: signup.email,\r\n        password: signup.password,\r\n      };\r\n      axios\r\n        .post(\"users\", data)\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          setLoading(false);\r\n          history.push(\"/Home\", { from: \"SingUp\" });\r\n        })\r\n        .catch((err) => {\r\n          setState({ ...state, open: true });\r\n          setErr(err.response.data.error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  const validationName = (e) =>{\r\n    if (e.target.value === \"\") {\r\n        setValidate({\r\n          ...validate,\r\n          errName: true,\r\n          textName: \"username input required\",\r\n        });\r\n      } else\r\n        setValidate({\r\n          ...validate,\r\n          errName: false,\r\n          textName: \"\",\r\n        });\r\n    setSignup({ ...signup, name: e.target.value });\r\n  }\r\n  const validationEmail = (e) => {\r\n    setSignup({ ...signup, email: e.target.value });\r\n    if (!validateEmail(e.target.value) && e.target.value !== \"\")\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: true,\r\n        textEmail: \"Inter valid email\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: true,\r\n        textEmail: \"Email input required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errEmail: false,\r\n        textEmail: \"\",\r\n      });\r\n  };\r\n  const validationPassword = (e) => {\r\n    setSignup({ ...signup, password: e.target.value });\r\n    if (e.target.value !== \"\" && e.target.value.length < 8)\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: true,\r\n        textPassword: \"The password must be at least 8 characters\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: true,\r\n        textPassword: \"password input required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errPassword: false,\r\n        textPassword: \"\",\r\n      });\r\n  };\r\n  const validationConfirmPassword = (e) => {\r\n    setSignup({ ...signup, confirmPassword: e.target.value });\r\n    if (e.target.value !== signup.password)\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: true,\r\n        textConfirm: \"not matched\",\r\n      });\r\n    else if (e.target.value === \"\") {\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: true,\r\n        textConfirm: \" confirm password input is required\",\r\n      });\r\n    } else\r\n      setValidate({\r\n        ...validate,\r\n        errConfirm: false,\r\n        textConfirm: \"\",\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={color}>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid\r\n          className={classes.centerOutline}\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={5}\r\n          lg={4}\r\n        >\r\n          <FormTop />\r\n          <Box className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n              Welcome Back\r\n            </Typography>\r\n            <Typography component=\"h1\" variant=\"body1\">\r\n              Login your account\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                error={validate.errName}\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Username\"\r\n                name=\"name\"\r\n                helperText={validate.textName}\r\n                value={signup.name}\r\n                onChange={(e) => validationName(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                error={validate.errEmail}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                helperText={validate.textEmail}\r\n                value={signup.email}\r\n                onChange={(e) => validationEmail(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                error={validate.errPassword}\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                helperText={validate.textPassword}\r\n                value={signup.password}\r\n                onChange={(e) => validationPassword(e)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                error={validate.errConfirm}\r\n                id=\"confirmPassword\"\r\n                autoComplete=\"current-password\"\r\n                helperText={validate.textConfirm}\r\n                value={signup.confirmPassword}\r\n                onChange={(e) => validationConfirmPassword(e)}\r\n              />\r\n              <div className={classes.boxLoading}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={classes.submit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                {loading && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n              <Grid container>\r\n                <Grid item xs></Grid>\r\n                <Grid\r\n                  item\r\n                  onClick={() => history.push(\"/Signin\", { from: \"signin\" })}\r\n                >\r\n                  <Link className={classes.center} href=\"#\" variant=\"body2\">\r\n                    {\"Already have an account? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Grid item xs className={classes.instSection}>\r\n              <Typography component=\"h1\" variant=\"body1\">\r\n                Teach in OUTLINE platform?\r\n              </Typography>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.instButton}\r\n                onClick={() =>\r\n                  history.push(\"/SingUpInstructor \", { from: \"signup\" })\r\n                }\r\n              >\r\n                Sign up as instructor\r\n              </Button>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Hidden only={[\"sm\", \"xs\"]}>\r\n          <Grid\r\n            item\r\n            md={7}\r\n            lg={8}\r\n            style={{ height: \"100vh\", background: \"#fff\" }}\r\n            container\r\n          >\r\n            <img src={AuthBG} alt=\"BG\" className={classes.img} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical, horizontal }}\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={state.Transition}\r\n          message={err}\r\n          key={vertical + horizontal}\r\n        />\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\Home.js",["206"],"import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"./AppBar\";\r\nimport Articles from \"../articles/AllArticles\";\r\nimport IndividualArticle from \"../articles/IndividualArticle\";\r\nimport IndividualCourse from \"../courses/IndividualCourse\";\r\nimport ExploreCourses from \"../courses/ExploreCourses\";\r\nimport CoursesDashboard from \"../courses/CoursesDashboard\";\r\nimport CreateCourse from \"../courses/CreateCourse\";\r\nimport PurchasedCourse from \"../courses/PurchasedCourse\";\r\nimport NewsFeed from \"../newsfeed/NewsFeed\";\r\nimport Profile from \"../profile/Profile\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport color from \"../theme/Theme\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Logo from \"../../img/logo.svg\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    backgroundColor: \"#F3F3F3\",\r\n    color: \"#263238\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#F3F3F3\",\r\n    padding: theme.spacing(3),\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    background: \"#fff\",\r\n    borderBottomRightRadius: \"4px 4px\",\r\n    borderTopRightRadius: \"4px 4px\",\r\n  },\r\n  img: {\r\n    padding: \"20px 50px 10px 50px\",\r\n  },\r\n  logoutList: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n  },\r\n  Box: {\r\n    width: 239,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  ButtonCreate: {\r\n    margin: \"10px 20px 10px 20px\",\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState('');\r\n  const [caption, setCaption] = React.useState(\"News Feed\");\r\n  const {path, url} = useRouteMatch();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(\"\");\r\n  const getUser = async () => {\r\n    const response = await axios.get(`users/me`).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    setUser(response.data);\r\n  };\r\n  useEffect(() => {\r\n    if (!navigator.onLine) {\r\n      // setState({ ...state, openSnack: true });\r\n      // setErr(\"Hmmm....Your Are Offline, Check from Connect\");\r\n      console.log('Hmmm....Your Are Offline, Check from Connect')\r\n    } else if (localStorage.getItem(\"token\")) {\r\n      getUser();\r\n    }\r\n  }, [user]);\r\n  const drawer = (\r\n    <div>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          selected\r\n          component={Link}\r\n          to={`${url}/newsfeed`}\r\n          onClick={() => {\r\n            setSelected(0);\r\n            setCaption(\"News Feed\");\r\n          }}\r\n          selected={selected === 0}\r\n        >\r\n          <ListItemIcon>\r\n            <TimelineIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"News Feed\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={`${url}/articles`}\r\n          onClick={() => {\r\n            setSelected(1);\r\n            setCaption(\"Articles\");\r\n          }}\r\n          selected={selected === 1}\r\n        >\r\n          <ListItemIcon>\r\n            <DescriptionIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Articles\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={`${url}/questions`}\r\n          onClick={() => {\r\n            setSelected(2);\r\n            setCaption(\"Questions\");\r\n          }}\r\n          selected={selected === 2}\r\n        >\r\n          <ListItemIcon>\r\n            <HelpIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Questions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={`${url}/explorecourses`}\r\n          onClick={() => {\r\n            setCaption(\"Explore Courses\");\r\n            setSelected(4);\r\n          }}\r\n          selected={selected === 4}\r\n        >\r\n          <ListItemIcon>\r\n            <ExploreIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Explore Courses\" />\r\n        </ListItem>\r\n    \r\n      {user.role !== \"basic user\" && (\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={`${url}/coursesdashboard`}\r\n          onClick={() => {\r\n            setSelected(3);\r\n            setCaption(\"Courses Dashboard\");\r\n          }}\r\n          selected={selected === 3}\r\n        >\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Courses Dashboar\" />\r\n        </ListItem>\r\n        \r\n      )}\r\n        </List>\r\n      <div className={classes.logoutList}>\r\n        <div className={classes.Box}>\r\n          {user.role !== \"basic user\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.ButtonCreate}\r\n              component={Link}\r\n              to={`${url}/createcourse`}\r\n              onClick={() => {\r\n                setCaption(\"Create Course\");\r\n              }}\r\n            >\r\n              Create new Course\r\n            </Button>\r\n          )}\r\n          <Divider />\r\n          <List>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                localStorage.clear();\r\n                setUser(\"\")\r\n                history.push(\"/signin\", { from: \"Home\" });\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Logout\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <ThemeProvider theme={color}>\r\n          <CssBaseline />\r\n          <AppBar user={user} caption={caption} />\r\n          <div className={classes.toolbar} />\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            anchor=\"left\"\r\n          >\r\n            <img src={Logo} alt=\"outline Logo\" className={classes.img} />\r\n            {drawer}\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Switch>\r\n              <Route path={`${path}/newsfeed`} exact component={NewsFeed}></Route>\r\n              <Route path={`${path}/articles`} exact component={Articles}></Route>\r\n              <Route\r\n                path={`${path}/articles/:id`}\r\n                component={IndividualArticle}\r\n              ></Route>\r\n              <Route\r\n                path={`${path}/explorecourses/:id`}\r\n                component={IndividualCourse}\r\n              ></Route>\r\n              <Route\r\n                path={`${path}/explorecourses/mycourse/:id`}\r\n                component={PurchasedCourse}\r\n              ></Route>\r\n              <Route\r\n                path={`${path}/explorecourses`}\r\n                exact\r\n                component={ExploreCourses}\r\n              ></Route>\r\n              <Route\r\n              exact\r\n                path={`${path}/createcourse`}\r\n                component={CreateCourse}\r\n              ></Route>\r\n              <Route\r\n              exact\r\n                path={`${path}/coursesdashboard`}\r\n                component={CoursesDashboard}\r\n              ></Route>\r\n              <Route path={`${path}/profile`} component={Profile}></Route>\r\n            </Switch>\r\n          </main>\r\n        </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\PurchasedCourse.js",["207","208","209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CourseBG from \"../../img/coursesBG.png\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    background: `url(${CourseBG})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right top\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"4x\",\r\n  },\r\n  customChips: {\r\n    background: \"rgba(38,50,56,0.8)\",\r\n    color: \"#fff\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"4px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#272727\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  infoSection: {\r\n    position: \"-webkit-sticky\",\r\n    position: \"sticky\",\r\n    top: 90,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flexStart\",\r\n    height: \"82vh\",\r\n    background: \"#fff\",\r\n    borderRadius: \"4px\",\r\n    padding: \"20px 10px\",\r\n  },\r\n  detailsSections: {\r\n    background: \"#fff\",\r\n    borderRadius: \"4px\",\r\n    padding: \"20px 10px\",\r\n    margin: \"10px 0\",\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n    borderRadius: \"4px\",\r\n    objectFit: \"cover\",\r\n  },\r\n  listStyle: {\r\n    background: \"#D7E5F9\",\r\n    borderRadius: \"4px\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\nconst PurchasedCourse = (props) => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [content, setContent] = React.useState({\r\n      url: \"\",\r\n      videoName: \"ss\",\r\n  }\r\n      );\r\n  const [results, setResults] = useState([]);\r\n  const [instructor,setInstructor] = useState('')\r\n  const [contents,setContents] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getCourse = async () => {\r\n      const response = await axios\r\n        .get(`courses/60709a39998137003cd0c27c`)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      setResults(response.data);\r\n      console.log(response.data)\r\n      setContents(response.data.contents)\r\n      setContent({...content, url:response.data.contents[0].content_link, videoName:response.data.contents[0].content_name});\r\n      setInstructor(response.data.owner_user_id);\r\n      setLoading(true);\r\n    };\r\n    getCourse();\r\n  }, []);\r\n  function secondsToHms(value) {\r\n    const sec = parseInt(value, 10);\r\n    let hours = Math.floor(sec / 3600);\r\n    let minutes = Math.floor((sec - hours * 3600) / 60);\r\n    let seconds = sec - hours * 3600 - minutes * 60;\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds;\r\n    }\r\n    if (hours == 0) {\r\n      return +minutes + \":\" + seconds; // Return in MM:SS format\r\n    } else {\r\n      return hours + \":\" + minutes + \":\" + seconds; // Return in HH:MM:SS format\r\n    }\r\n  }\r\n\r\n  const renderContent = contents.map((result,index) => {\r\n      \r\n        \r\n\r\n    return (\r\n      <React.Fragment key={result._id}>\r\n          \r\n        <List>\r\n          <ListItem\r\n          button\r\n            // className={classes.listStyle}\r\n            justifyContent=\"space-between\"\r\n            onClick={() => {setSelected(index)\r\n                setContent({...content, url:result.content_link, videoName:result.content_name})\r\n            }}\r\n                selected={selected === index}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ImageIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={result.content_name} />\r\n            <ListItemText\r\n              secondary={`${secondsToHms(\r\n                result.video_duration_in_seconds\r\n              )} Min`}\r\n              alignSelf=\"flex-end\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  const renderCourse = (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={9}>\r\n          <iframe\r\n            style={{\r\n              borderRadius: \"4x\",\r\n              border:'none',\r\n              boxShadow: \"none\",\r\n              width: \"100%\",\r\n              height: \"60vh\"\r\n            }}\r\n            src={content.url.replace(\"view\", \"preview\")}\r\n            name=\"selectedVideo\"\r\n            id=\"selectedVideo\"\r\n            allowfullscreen=\"true\"\r\n            \r\n          ></iframe>\r\n          <Typography variant=\"h5\">{content.videoName.replace(\".mp4\", \"\")}</Typography>\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.infoSection}>\r\n        {renderContent}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loading ? renderCourse :<Grid  container\r\n  direction=\"column\"\r\n  justifyContent=\"center\"\r\n  alignItems=\"center\"\r\n  style={{height: \"80vh\"}}\r\n  >\r\n      <Grid item xs={12}  >\r\n          \r\n        \r\n      <CircularProgress />\r\n      </Grid></Grid>}\r\n\r\n    </>\r\n  );\r\n};\r\nexport default PurchasedCourse;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\newsfeed\\NewsFeed.js",["214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ReactQuill from \"react-quill\";\r\nimport Delta from \"quill-delta\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    backgroundColor: \"#bbbbbb\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  mainContainer:{\r\ndisplay: \"flex\",\r\nflexDirection: \"column\",\r\njustifyContent: \"center\",\r\nalignItems: \"center\",\r\n  }\r\n}));\r\n\r\nconst NewsFeed = () => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getArticles = async () => {\r\n      const response = await axios\r\n        .get(\"/news-feed?limit=5&articles_skip=0&questions_skip=0\")\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(response.data);\r\n      setResults(response.data);\r\n      setLoading(true);\r\n    };\r\n    getArticles();\r\n  }, []);\r\n\r\n  function secondsToHms(value) {\r\n    const sec = parseInt(value, 10);\r\n    let hours = Math.floor(sec / 3600);\r\n    let minutes = Math.floor((sec - hours * 3600) / 60);\r\n    let seconds = sec - hours * 3600 - minutes * 60;\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds;\r\n    }\r\n    if (hours == 0) {\r\n      return +minutes + \":\" + seconds; // Return in MM:SS format\r\n    } else {\r\n      return hours + \":\" + minutes + \":\" + seconds; // Return in HH:MM:SS format\r\n    }\r\n  }\r\n\r\n  const renderArticle = results.map((result, index) => {\r\n    return (\r\n      <React.Fragment key={index}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          lg={12}\r\n          md={12}\r\n          sm={12}\r\n          xs={12}\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          {result.type === \"article\" && (\r\n            <Card\r\n              className={classes.acricalCard}\r\n              onClick={() => {\r\n                history.push(`/Home/Articles/${result.post.article.id}`, {\r\n                  from: \"Home\",\r\n                });\r\n              }}\r\n            >\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      src={result.post.article.owner_user_id.avatar}\r\n                    ></Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={result.post.article.owner_user_id.name}\r\n                    secondary={secondsToHms(result.post.article.createdAt)}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={result.post.article.banner}\r\n              />\r\n              <Typography variant=\"subtitle1\">\r\n                {result.post.article.title}\r\n              </Typography>\r\n              <ReactQuill\r\n                theme=\"bubble\"\r\n                value={new Delta(JSON.parse(result.post.article.content))}\r\n                readOnly={true}\r\n              />\r\n            </Card>\r\n          )}\r\n          {result.type === \"question\" && (\r\n            <Card>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    src={result.post.question.owner_user_id.avatar}\r\n                  ></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={result.post.question.owner_user_id.name}\r\n                  secondary={secondsToHms(result.post.question.createdAt)}\r\n                />\r\n              </ListItem>\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  <ReactQuill\r\n                    theme=\"bubble\"\r\n                    value={new Delta(JSON.parse(result.post.question.body))}\r\n                    readOnly={true}\r\n                  />\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                  <ShareIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          )}\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <CssBaseline />\r\n\r\n      {loading ? <div style={{width:\"40vw\"}}>{renderArticle}</div>: <CircularProgress />}\r\n    </div>\r\n  );\r\n};\r\nexport default NewsFeed;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\ExploreCourses.js",["216"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CourseBG from \"../../img/coursesBG.png\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    background: `url(${CourseBG})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right top\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  customChips: {\r\n    background: \"rgba(38,50,56,0.8)\",\r\n    color: \"#fff\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"4px\",\r\n\r\n    \"&:hover\": {\r\n      boxShadow: '3px 0px 7px 2px rgba(0, 0, 0, .2)',\r\n    },\r\n  },\r\n  avatarSection: {\r\n    display: \"flex\",\r\nalignItems: \"center\",\r\n  },\r\n  ExploreSection: {\r\n    marginTop: \"10px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n}));\r\nconst AllCourses = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getCourses = async () => {\r\n      const response = await axios.get(\"courses\").catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      setResults(response.data);\r\n\r\n      setLoading(true);\r\n    };\r\n    getCourses();\r\n  }, []);\r\n\r\n  const renderCourses = results.map((result) => {\r\n    return (\r\n      <React.Fragment key={result._id}>\r\n        <Grid item xs={3} lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.acricalCard}>\r\n            <CardMedia className={classes.media} image={result.banner} />\r\n\r\n            <CardContent>\r\n              <Typography variant=\"h6\" color={'textPrimary'}>{result.title}</Typography>\r\n              \r\n              \r\n             \r\n               <div className={classes.avatarSection}>\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    \r\n                    src={result.owner_user_id.avatar}\r\n                  />\r\n                \r\n                <Typography variant=\"subtitle2\" style={{margin:\"0 10px\"}}>{result.owner_user_id.name}</Typography>\r\n                </div>\r\n<div className={classes.ExploreSection}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={ ()=> history.push(`/Home/ExploreCourses/${result._id}`, {\r\n                from: \"coursesDashboard\",\r\n              })}>\r\n        Explore Now\r\n      </Button>\r\n      <Typography variant=\"h5\"  color={'primary'}>${result.price}</Typography>\r\n      </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.body}>\r\n        {loading ? renderCourses : <CircularProgress />}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default AllCourses;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\CoursesDashboard.js",["217","218","219","220","221","222","223"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CourseBG from \"../../img/coursesBG.png\";\r\nimport EmptyBG from \"../../img/BgC.svg\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import EditIcon from \"@material-ui/icons/Edit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    background: `url(${CourseBG})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right top\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  customChips: {\r\n    background: \"rgba(38,50,56,0.8)\",\r\n    color: \"#fff\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"10px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#272727\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  emptyBox: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Box: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"150px\",\r\n    borderRadius: \"4px\",\r\n    width: \"32%\",\r\n    backgroundColor: \"#C3D6F6\",\r\n    color: \"#263238\",\r\n  },\r\n  mainBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n  mainList: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  searchBox: {\r\n    diplay: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px 0\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\nconst CoursesDashboard = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [seacrchValue, setSeacrchValue] = useState(\"\");\r\n  const [statistic, setStatistic] = useState({\r\n    courses: 0,\r\n    totalprice: 0,\r\n    students: 0,\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [courseId, setCourseId] = React.useState(\"\");\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const RemoveCourse = () => {\r\n    const deleteCourses = async () => {\r\n      const response = await axios\r\n        .delete(`courses/${courseId}`)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(response.data);\r\n      window.location.reload(true);\r\n    };\r\n    deleteCourses();\r\n  };\r\n  useEffect(() => {\r\n    const getCourses = async () => {\r\n      const response = await axios.get(\"courses/me\").catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      setResults(response.data);\r\n      \r\n      let contStudents=statistic.students ;\r\n      let totalPrice=statistic.totalprice\r\n      const l = response.data.map((result) => {\r\n        contStudents = contStudents + result.subscribers.length;\r\n        totalPrice = totalPrice + result.subscribers.length * result.price;\r\n      });\r\n        setStatistic({\r\n          ...statistic,\r\n          courses: response.data.length ,\r\n          totalprice: totalPrice,\r\n          students: contStudents,\r\n        });\r\n     \r\n      setLoading(true);\r\n    };\r\n    getCourses();\r\n  }, []);\r\n\r\n  const emptyResult = (\r\n    <div emptyBox className={classes.emptyBox}>\r\n      <Typography variant=\"h6\">No Courses Yet</Typography>\r\n      <img src={EmptyBG} />\r\n    </div>\r\n  );\r\n  const renderCourses = results.map((result) => {\r\n    return (\r\n      <React.Fragment key={result._id}>\r\n        {seacrchValue === \"\" && (\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xs={12}>\r\n            <List className={classes.mainList} >\r\n              <ListItem button onClick={ ()=> history.push(`/Home/ExploreCourses/${result._id}`, {\r\n                from: \"coursesDashboard\",\r\n              })}>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    src={result.banner}\r\n                    sizes=\"400px\"\r\n                    style={{\r\n                      borderRadius: \"4px\",\r\n                      width: \"120px\",\r\n                      height: \"75px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={result.title}\r\n                  secondary={`$${result.price}`}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                  {/* <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <EditIcon color={\"primary\"} />\r\n                  </IconButton> */}\r\n                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <DeleteIcon\r\n                      color={\"secondary\"}\r\n                      onClick={() => {\r\n                        handleClickOpen();\r\n                        setCourseId(result._id);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        )}\r\n        {result.title.includes(seacrchValue) && seacrchValue !== \"\" && (\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xs={12}>\r\n            <List className={classes.mainList}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    src={result.banner}\r\n                    sizes=\"400px\"\r\n                    style={{\r\n                      borderRadius: \"4px\",\r\n                      width: \"120px\",\r\n                      height: \"75px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={result.title}\r\n                  secondary={`$${result.price}`}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  {/* <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <EditIcon color={\"primary\"} />\r\n                  </IconButton> */}\r\n                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <DeleteIcon color={\"secondary\"} onClick={handleClickOpen} />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.body}>\r\n        <div className={classes.mainBox}>\r\n          <div className={classes.Box}>\r\n            <PlayCircleFilledIcon fontSize={\"large\"} />\r\n            <Typography variant=\"h6\">Courses</Typography>\r\n            <Typography variant=\"h5\">{statistic.courses}</Typography>\r\n          </div>\r\n          <div className={classes.Box}>\r\n            <PeopleIcon fontSize={\"large\"} />\r\n            <Typography variant=\"h6\">Students</Typography>\r\n            <Typography variant=\"h5\">{statistic.students}</Typography>\r\n          </div>\r\n          <div className={classes.Box}>\r\n            <PaymentIcon fontSize={\"large\"} />\r\n            <Typography variant=\"h6\">Total Earnings</Typography>\r\n            <Typography variant=\"h5\">{statistic.totalprice}</Typography>\r\n          </div>\r\n        </div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          style={{margin:\"20px 0\"}}\r\n        >\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" style={{ marginBottom: \"10px\" }}>\r\n              My Courses\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Search\"\r\n              id=\"outlined-size-small\"\r\n              variant=\"outlined\"\r\n              style={{width: \"100%\" ,backgroundColor: \"white\"}}\r\n              value={seacrchValue}\r\n              size=\"small\"\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton>\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              onChange={(e) => setSeacrchValue(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {loading ? renderCourses : <Grid container\r\n  direction=\"row\"\r\n  justifyContent=\"center\"\r\n  alignItems=\"center\"><Grid item xs={12}> <CircularProgress /> </Grid></Grid>}\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Remove Course\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to remove this course?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              RemoveCourse();\r\n              handleClose();\r\n            }}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Remove\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default CoursesDashboard;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\CreateCourse.js",["224","225","226"],"import React, { useState } from \"react\";\r\nimport AddVideos from \"./AddVideos\";\r\nimport CourseBG from \"../../img/createCourseBG.png\";\r\nimport ShareBG from \"../../img/share.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport color from \"../theme/Theme\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  mainContainer: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    borderRadius: \"4px\",\r\n    display: \"flex\",\r\n    // overflowY:\"scroll\",\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    marginTop: \"10px\",\r\n  },\r\n  Tab: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-top\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"45vw\",\r\n  },\r\n  heroBox: {\r\n    background: `url(${CourseBG})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right top\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"25vh\",\r\n    marginBottom: \"25px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  formCollection: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"start\",\r\n    maxWidth: \"40vw\",\r\n    minWidth: \"20vw\",\r\n    marginTop: \"20px\",\r\n  },\r\n  child: {\r\n    marginBottom: \"10px\",\r\n  },\r\n  upload: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"40vw\",\r\n    height: \"100px\",\r\n    borderRadius: \"4px\",\r\n    background: `url(${CourseBG}) `,\r\n    backgroundRepeat: \"no-repeat !important\",\r\n    backgroundPosition: \"center !important\",\r\n    backgroundSize: \"cover !important\",\r\n    backgroundClip: \"padding-box !important\",\r\n    text: \"#fff\",\r\n  },\r\n  ContentSection: {\r\n    width: \"50%\",\r\n    // height: \"50vh\",\r\n  },\r\n  boxLoading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"#272727\",\r\n    position: \"absolute\",\r\n    marginTop: \"10px\",\r\n    width: \"100%\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"100%\",\r\n  },\r\n}));\r\nexport default function CreateCourse() {\r\n  const [course, setCourse] = useState({\r\n    title: \"\",\r\n    requirements: \"\",\r\n    price: \"\",\r\n    description: \"\",\r\n    banner: null,\r\n  });\r\n  const [courseId, setCourseId] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [disabled, setDisabled] = React.useState(true);\r\n  const [validate, setValidate] = useState({\r\n    errTitle: false,\r\n    textTitle: \"\",\r\n    errRequirements: false,\r\n    textRequirements: \"\",\r\n    errDescription: false,\r\n    textDescription: \"\",\r\n    errPrice: false,\r\n    textPrice: \"\",\r\n  });\r\n  const [err, setErr] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    Transition: Slide,\r\n  });\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!navigator.onLine) {\r\n      setState({ ...state, open: true });\r\n      setErr(\"Your Are Offline, Check from Connec\");\r\n    } else if (\r\n      !course.title ||\r\n      !course.description ||\r\n      !course.price ||\r\n      !course.requirements\r\n    ) {\r\n      setState({ ...state, open: true });\r\n      setLoading(false);\r\n      setErr(\"Enter the information in the required fields\");\r\n      if (!course.title)\r\n        setValidate({\r\n          ...validate,\r\n          errTitle: true,\r\n          textTitle: \"this filed is required\",\r\n        });\r\n      else if (!course.description)\r\n        setValidate({\r\n          ...validate,\r\n          errDescription: true,\r\n          textDescription: \"this filed is required\",\r\n        });\r\n      else if (!course.price)\r\n        setValidate({\r\n          ...validate,\r\n          errPrice: true,\r\n          textPrice: \"this filed is required\",\r\n        });\r\n      else if (!course.requirements)\r\n        setValidate({\r\n          ...validate,\r\n          errRequirements: true,\r\n          textRequirements: \"this filed is required\",\r\n        });\r\n    } else {\r\n      const formdata = new FormData();\r\n      formdata.append(\"title\", course.title);\r\n      formdata.append(\"requirements\", course.requirements);\r\n      formdata.append(\"price\", course.price);\r\n      formdata.append(\"description\", course.description);\r\n      formdata.append(\"banner\", course.banner);\r\n      await axios\r\n        .post(\"/courses\", formdata)\r\n        .then((response) => {\r\n          setCourseId(response.data._id)\r\n        })\r\n        .catch((err) => console.log(err));\r\n      setValue(1);\r\n      setDisabled(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={color}>\r\n        <CssBaseline />\r\n\r\n        <div>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <div className={classes.heroBox}>\r\n                <img src={ShareBG} style={{ marginLeft: \"25px\" }} />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.mainContainer}>\r\n            <Tabs\r\n              orientation=\"vertical\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"Vertical tabs example\"\r\n              className={classes.tabs}\r\n            >\r\n              <Tab label=\"Plan Your Course\" {...a11yProps(0)} />\r\n              <Tab label=\"Add Contents\" {...a11yProps(1)} disabled={disabled} />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0} className={classes.Tab}>\r\n              <div className={classes.form}>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className={classes.formCollection}>\r\n                    <Typography variant=\"h6\">Plan Your Course</Typography>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.child}\r\n                    >\r\n                      The platform enables you to create courses by adding a\r\n                      name, requirements and description for the course and\r\n                      attaching an image that reflects the content of the\r\n                      course.\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                      How about a working title?\r\n                    </Typography>\r\n                    <TextField\r\n                      error={validate.errTitle}\r\n                      helperText={validate.textTitle}\r\n                      fullWidth=\"true\"\r\n                      id=\"outlined-basic\"\r\n                      variant=\"outlined\"\r\n                      label=\"Title\"\r\n                      multiline\r\n                      rowsMax=\"2\"\r\n                      size=\"small\"\r\n                      floatingLabelText=\"MultiLine and FloatingLabel\"\r\n                      value={course.title}\r\n                      className={classes.child}\r\n                      onChange={(e) => {\r\n                        setCourse({ ...course, title: e.target.value });\r\n                        if (e.target.value == \"\")\r\n                          setValidate({\r\n                            ...validate,\r\n                            errTitle: true,\r\n                            textTitle: \"this filed is required\",\r\n                          });\r\n                        else\r\n                          setValidate({\r\n                            ...validate,\r\n                            errTitle: false,\r\n                            textTitle: \"\",\r\n                          });\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"subtitle1\">\r\n                      Are there any course requirements?\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                      error={validate.errRequirements}\r\n                      helperText={validate.textRequirements}\r\n                      fullWidth=\"true\"\r\n                      id=\"outlined-basic\"\r\n                      label=\"requirements\"\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows=\"2\"\r\n                      rowsMax=\"5\"\r\n                      size=\"small\"\r\n                      className={classes.child}\r\n                      value={course.requirements}\r\n                      onChange={(e) => {\r\n                        setCourse({ ...course, requirements: e.target.value });\r\n                        if (e.target.value === \"\")\r\n                          setValidate({\r\n                            ...validate,\r\n                            errRequirements: true,\r\n                            textRequirements: \"this filed is required\",\r\n                          });\r\n                        else\r\n                          setValidate({\r\n                            ...validate,\r\n                            errRequirements: false,\r\n                            textRequirements: \"\",\r\n                          });\r\n                      }}\r\n                    />\r\n\r\n                    <Typography variant=\"subtitle1\">\r\n                      What is the description of the course?\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                      error={validate.errDescription}\r\n                      helperText={validate.textDescription}\r\n                      fullWidth=\"true\"\r\n                      id=\"outlined-basic\"\r\n                      label=\"description\"\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows=\"2\"\r\n                      rowsMax=\"5\"\r\n                      size=\"small\"\r\n                      className={classes.child}\r\n                      value={course.description}\r\n                      onChange={(e) => {\r\n                        setCourse({ ...course, description: e.target.value });\r\n                        if (e.target.value === \"\")\r\n                          setValidate({\r\n                            ...validate,\r\n                            errDescription: true,\r\n                            textDescription: \"this filed is required\",\r\n                          });\r\n                        else\r\n                          setValidate({\r\n                            ...validate,\r\n                            errDescription: false,\r\n                            textDescription: \"\",\r\n                          });\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"subtitle1\">\r\n                      Put the right price for the course\r\n                    </Typography>\r\n                    <TextField\r\n                      error={validate.errPrice}\r\n                      helperText={validate.textPrice}\r\n                      fullWidth=\"true\"\r\n                      id=\"outlined-basic\"\r\n                      label=\"price\"\r\n                      variant=\"outlined\"\r\n                      multiline\r\n                      rows=\"2\"\r\n                      rowsMax=\"5\"\r\n                      size=\"small\"\r\n                      inputProps={{ inputmode: \"numeric\" }}\r\n                      className={classes.child}\r\n                      value={course.price}\r\n                      onChange={(e) => {\r\n                        setCourse({ ...course, price: e.target.value });\r\n                        if (e.target.value === \"\")\r\n                          setValidate({\r\n                            ...validate,\r\n                            errPrice: true,\r\n                            textPrice: \"this filed is required\",\r\n                          });\r\n                        else\r\n                          setValidate({\r\n                            ...validate,\r\n                            errPrice: false,\r\n                            textPrice: \"\",\r\n                          });\r\n                      }}\r\n                    />\r\n                    <input\r\n                      accept=\"image/*\"\r\n                      className={classes.input}\r\n                      id=\"contained-button-file\"\r\n                      type=\"file\"\r\n                      name=\"banner\"\r\n                      multiline\r\n                      rows=\"2\"\r\n                      rowsMax=\"5\"\r\n                      size=\"small\"\r\n                      onChange={(e) => {\r\n                        setCourse({ ...course, banner: e.target.files[0] });\r\n                      }}\r\n                    />\r\n                    <label\r\n                      htmlFor=\"contained-button-file\"\r\n                      className={classes.child}\r\n                    >\r\n                      <div\r\n                        className={classes.upload}\r\n                        style={{\r\n                          background: course.banner\r\n                            ? `url(${URL.createObjectURL(course.banner)})`\r\n                            : \"#D7E5F9\",\r\n                          border: \"0.5px solid #3a7ce1\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          component=\"span\"\r\n                          startIcon={\r\n                            course.banner ? <ReplayIcon /> : <CloudUploadIcon />\r\n                          }\r\n                        >\r\n                          {course.banner ? \"replace\" : \"upload\"}\r\n                        </Button>\r\n                      </div>\r\n                    </label>\r\n                    <div className={classes.boxLoading}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                        className={classes.submit}\r\n                      >\r\n                        Create Course\r\n                      </Button>\r\n                      {loading && (\r\n                        <CircularProgress\r\n                          size={24}\r\n                          className={classes.buttonProgress}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1} className={classes.Tab}>\r\n              <AddVideos courseId={courseId} />\r\n            </TabPanel>\r\n            <Snackbar\r\n              anchorOrigin={{ vertical, horizontal }}\r\n              open={open}\r\n              onClose={handleClose}\r\n              TransitionComponent={state.Transition}\r\n              message={err}\r\n              key={vertical + horizontal}\r\n            />\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\IndividualCourse.js",["227","228","229","230"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CourseBG from \"../../img/coursesBG.png\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Dia from \"./Banker\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    background: `url(${CourseBG})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right top\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  customChips: {\r\n    background: \"rgba(38,50,56,0.8)\",\r\n    color: \"#fff\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"10px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#272727\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  infoSection: {\r\n    position: \"-webkit-sticky\",\r\n    position: \"sticky\",\r\n    top: 80,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flexStart\",\r\n    height: \"87vh\",\r\n    background: \"#fff\",\r\n    borderRadius: \"12px\",\r\n    padding: \"20px 10px\",\r\n  },\r\n  detailsSections: {\r\n    background: \"#fff\",\r\n    borderRadius: \"12px\",\r\n    padding: \"20px 10px\",\r\n    margin: \"10px 0\",\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n    borderRadius: \"12px\",\r\n    objectFit: \"cover\",\r\n  },\r\n  listStyle: {\r\n    background: \"#D7E5F9\",\r\n    borderRadius: \"12px\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\nconst IndividualCourse = (props) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [contents, setContents] = useState([])\r\n  const [user,setUser]=useState('')\r\n\r\nconsole.log(props)\r\n  useEffect(() => {\r\n    const getCourse = async () => {\r\n      const response = await axios\r\n        .get(`courses/${props.match.params.id}`)\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      setResults(response.data);\r\n      console.log(response.data)\r\n     setUser(response.data.owner_user_id)\r\n      setContents(response.data.contents)\r\n      setLoading(true);\r\n    };\r\n    getCourse();\r\n  }, []);\r\n  function secondsToHms(value) {\r\n    const sec = parseInt(value, 10);\r\n    let hours = Math.floor(sec / 3600);\r\n    let minutes = Math.floor((sec - hours * 3600) / 60);\r\n    let seconds = sec - hours * 3600 - minutes * 60;\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds;\r\n    }\r\n    if (hours == 0) {\r\n      return +minutes + \":\" + seconds; // Return in MM:SS format\r\n    } else {\r\n      return hours + \":\" + minutes + \":\" + seconds; // Return in HH:MM:SS format\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  const renderContent = contents.map((result) => {\r\n    return (\r\n      <React.Fragment key={result._id}>\r\n        <List>\r\n          <ListItem\r\n            className={classes.listStyle}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PlayCircleFilledIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={result.content_name} />\r\n            <ListItemText\r\n              secondary={`${secondsToHms(\r\n                result.video_duration_in_seconds\r\n              )} Min`}\r\n              alignSelf=\"flex-end\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n\r\n        \r\n        \r\n\r\n\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  const renderCourse = (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Grid item xs={9}>\r\n          <img className={classes.img} src={results.banner} />\r\n          <Grid item xs={12} className={classes.detailsSections}>\r\n          <Typography variant=\"h5\" color={\"primary\"}>\r\n              Contents:\r\n            </Typography>\r\n            <Divider />\r\n            {renderContent}\r\n            <Typography variant=\"h5\" color={\"primary\"}>\r\n              Description:\r\n            </Typography>\r\n            <Divider />\r\n            <Typography variant=\"subtitle1\">\r\n              {results.description}Lorem ipsum dolor sit amet, consectetur\r\n              adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n              exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n              consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n              velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n              occaecat cupidatat non proident, sunt in culpa qui officia\r\n              deserunt mollit anim id est laborum.\r\n            </Typography>\r\n            <Typography variant=\"h5\" color={\"primary\"}>\r\n              Requirements:\r\n            </Typography>\r\n            <Divider />\r\n            <Typography variant=\"subtitle1\">\r\n              {results.requirements}Lorem ipsum dolor sit amet, consectetur\r\n              adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n              exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n              consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n              velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n              occaecat cupidatat non proident, sunt in culpa qui officia\r\n              deserunt mollit anim id est laborum.\r\n            </Typography>\r\n            \r\n\r\n            \r\n            \r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.infoSection}>\r\n          <Typography variant=\"h6\">{results.title}</Typography>\r\n          <Typography variant=\"subtitle1\">The course includes:</Typography>\r\n          <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <PlayCircleFilledIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={contents.length} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <GroupIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={results.subscribers} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <StarIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={results.avg_rating} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <AccessibilityIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Full lifetime access\" />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <DevicesIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Access on mobile and Platform\" />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <ScheduleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={results.createdAt} />\r\n            </ListItem>\r\n          </List>\r\n          <Typography variant=\"subtitle1\">Create By:</Typography>\r\n          <ListItem alignItems=\"center\">\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Travis Howard\" src={user.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText primary={user.name} />\r\n          </ListItem>\r\n\r\n          <Typography variant=\"h4\" color={\"primary\"}style={{alignSelf:\"flex-end\"}}>${results.price}</Typography>\r\n          \r\n          <Dia />\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return <>{loading ? renderCourse : <CircularProgress />}\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n  </>;\r\n};\r\nexport default IndividualCourse;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\AllArticles.js",["231"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    backgroundColor: \"#bbbbbb\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"4px\",\r\n  },\r\n}));\r\n\r\nconst Articles = () => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getArticles = async () => {\r\n      const response = await axios\r\n        .get(\"https://outline-app-api.herokuapp.com/articles\")\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      console.log(response);\r\n      setResults(response.data);\r\n      setLoading(true);\r\n    };\r\n    getArticles();\r\n  }, []);\r\n\r\n  function secondsToHms(value) {\r\n    const sec = parseInt(value, 10);\r\n    let hours = Math.floor(sec / 3600);\r\n    let minutes = Math.floor((sec - hours * 3600) / 60);\r\n    let seconds = sec - hours * 3600 - minutes * 60;\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds;\r\n    }\r\n    if (hours === 0) {\r\n      return +minutes + \":\" + seconds; // Return in MM:SS format\r\n    } else {\r\n      return hours + \":\" + minutes + \":\" + seconds; // Return in HH:MM:SS format\r\n    }\r\n  }\r\n\r\n  const renderArticle = results.map((result) => {\r\n    return (\r\n      <React.Fragment key={result.article.id}>\r\n        <Grid item xs={3} lg={3} md={4} sm={6} xs={12}>\r\n          <Card\r\n            className={classes.acricalCard}\r\n            onClick={() => {\r\n            \r\n              history.push(`/Home/Articles/${result.article.id}`, {\r\n                from: \"Home\",\r\n              });\r\n            }}\r\n          >\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={result.article.banner}\r\n            />\r\n            <Typography variant=\"subtitle1\">{result.article.title}</Typography>\r\n\r\n            <List className={classes.root}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar src={result.article.owner_user_id.avatar}></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={result.article.owner_user_id.name}\r\n                  secondary={secondsToHms(result.article.createdAt)}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"comments\">\r\n                    <CommentIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n                <ListItemText\r\n                  primary=\"12\"\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Card>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <div className={classes.heroBox}>\r\n            <Typography variant=\"h2\">Atricles</Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        {loading ? renderArticle : <CircularProgress />}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default Articles;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\articles\\IndividualArticle.js",["232","233"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ReactQuill from \"react-quill\";\r\nimport Delta from \"quill-delta\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  heroBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"40vh\",\r\n    maxWidth: \"100vw\",\r\n    backgroundColor: \"#bbbbbb\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  acricalCard: {\r\n    boxShadow: \"none\",\r\n    borderRadius: \"10px\",\r\n  },\r\n}));\r\nconst IndividualArticle = (match) => {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n  var config = {\r\n    method: \"get\",\r\n    url: \"https://outline-app-api.herokuapp.com/articles/60e5cc5abdd72a3fbc97dfc4\",\r\n  };\r\n\r\n  axios(config)\r\n    .then(function (response) {\r\n      // console.log(response.data);\r\n      setResults(response.data.article);\r\n      setLoading(true);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const getArticle = async () => {\r\n  //     const response = await axios\r\n  //       .get(\r\n  //         `https://outline-app-api.herokuapp.com/articles/60e5cc5abdd72a3fbc97dfc4`\r\n  //       )\r\n  //       .catch(function (error) {\r\n  //         console.log(error);\r\n  //       });\r\n  //     console.log(response.data.article);\r\n  //     console.log(response.data.article.content);\r\n  //     setResults(response.data.article);\r\n  //     setLoading(true);\r\n  //   };\r\n  //   getArticle();\r\n  // }, []);\r\n\r\n  const renderArticle = (\r\n    <div>\r\n      {/* <Grid item xs={12} lg={12} md={12} sm={12} xs={12}>\r\n          <Card className={classes.acricalCard}>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={results.banner}\r\n            />\r\n            <CardContent>\r\n              \r\n                <Typography variant=\"subtitle1\">\r\n                  {results.title}\r\n                </Typography>\r\n              \r\n            </CardContent>\r\n            <CardHeader\r\n              avatar={<Avatar src={results.owner_user_id.avatar} />}\r\n              title={results.owner_user_id.name}\r\n            />\r\n          </Card>\r\n        </Grid> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        {loading ? (\r\n          <div>\r\n            {results.banner}\r\n            <Avatar src={results.owner_user_id.avatar} />\r\n            {results.title}\r\n            {\r\n              <ReactQuill\r\n                theme=\"bubble\"\r\n                value={new Delta(JSON.parse(JSON.stringify(results.content)))}\r\n                readOnly={true}\r\n              />\r\n            }\r\n          </div>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default IndividualArticle;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\AddVideos.js",["234"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"45vw\",\r\n  },\r\n  formCollection: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"start\",\r\n    maxWidth: \"40vw\",\r\n    minWidth: \"20vw\",\r\n    marginTop: \"20px\",\r\n  },\r\n  ContentSection: {\r\n    width: \"100%\",\r\n    minHeight: \"50vh\",\r\n  },\r\n  contentsBox: {\r\n    borderRadius: \"4px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between;\",\r\n    alignItems: \"center;\",\r\n    padding: \"5px\",\r\n    margin: \"5px 0\",\r\n    background: \"#C2D0E4\",\r\n  },\r\n  summary: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"15px 0\",\r\n    width: \"100%\",\r\n  },\r\n  boxLoading: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n  },\r\n  buttonProgress: {\r\n    color: \"#272727\",\r\n    position: \"absolute\",\r\n    marginTop:'10px',\r\n    width: \"100%\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"100%\"\r\n  },\r\n}));\r\n\r\nconst AddVideos = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [contents, setContents] = useState(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleSubmitCreate = async (e) => {\r\n    e.preventDefault();\r\n    if(contents) {\r\n      setLoading(true);\r\n      \r\n    const formdata = new FormData();\r\n    let videos = Array.from(contents);\r\n    for (let i=0; i < videos.length; i++) {\r\n      console.log(videos[i])\r\n      formdata.append(\"content\", videos[i]);\r\n    }\r\n    // formdata.append(\"content\", contents);\r\n    console.log(props)\r\n    await axios\r\n      .patch(\r\n        `/courses/${props.courseId}/contents`,\r\n        formdata\r\n      )\r\n      .then(response => response)\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n      // .then((response) => console.log(response))\r\n      // .catch((err) => {console.log(err)\r\n      //   setState({ ...state, open: true })\r\n      //   // setErr(err)\r\n        setLoading(false)\r\n        setTimeout(history.push(\"/Home/CoursesDashboard\", { from: \"AddVideos\" }), 2000);\r\n        \r\n      // }\r\n      // )\r\n    }\r\n  };\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const [state, setState] = useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n    Transition: Slide,\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  let renderContents;\r\n  if (contents) {\r\n    let videos = Array.from(contents);\r\n    console.log(videos);\r\n    renderContents = videos.map((video, index) => {\r\n      return (\r\n        <React.Fragment>\r\n          <div className={classes.contentsBox}>\r\n            <PlayCircleFilledIcon />\r\n            <Typography variant=\"caption\" noWrap={false}>\r\n              {video.name}\r\n            </Typography>\r\n            <HighlightOffIcon\r\n              onClick={() => {\r\n                videos.splice(index, 1);\r\n                // var toObject = Object.assign({}, videos);\r\n                setContents(videos);\r\n                // videos=Array.from(contents)\r\n                console.log(contents);\r\n              }}\r\n            \r\n            />\r\n            \r\n          </div>\r\n          {(index===videos.length-1) && <div>\r\n            <input\r\n                accept=\"video/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  let Data = [...contents, e.target.value]\r\n                  setContents(Data);\r\n                //   var files = e.dataTransfer.files\r\n                //   for (var i = 0, l = files.length; i < l; i++) {\r\n                //     setContents({ ...contents,contents:contents.push(files[i])});\r\n                // }\r\n                  console.log(contents);\r\n                }}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                  Add more Videros\r\n                </Button>\r\n              </label>\r\n              </div>}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  } else\r\n    renderContents = (\r\n      <div className={classes.formCollection}>\r\n        <Typography variant=\"subtitle1\">\r\n          Click the add videos button, the videos you selected will appear here\r\n        </Typography>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.form}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmitCreate}>\r\n          <div className={classes.formCollection}>\r\n            <Typography variant=\"h6\">Add videos</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Upload the videos you want to include in the course here. You can\r\n              choose more than one video together\r\n            </Typography>\r\n            <div className={classes.summary}>\r\n              <Typography variant=\"h6\">Summary</Typography>\r\n              <input\r\n                accept=\"video/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setContents(e.target.files);\r\n                  console.log(contents);\r\n                }}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload vedio\r\n                </Button>\r\n              </label>\r\n            </div>\r\n\r\n            <div className={classes.ContentSection}>\r\n              <Divider />\r\n              {renderContents}\r\n            </div>\r\n            <div className={classes.boxLoading}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                \r\n                disabled={loading}\r\n                className={classes.submit}\r\n              >\r\n                Create Course\r\n              </Button>\r\n              {loading && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  className={classes.buttonProgress}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        message={err}\r\n        key={vertical + horizontal}\r\n      />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddVideos;\r\n","C:\\Users\\jafar\\Desktop\\outline\\src\\components\\courses\\Banker.js",[],"C:\\Users\\jafar\\Desktop\\outline\\src\\components\\home\\AppBar.js",["235"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    backgroundColor: \"#F3F3F3\",\r\n    color: \"#263238\",\r\n    zIndex: \"1\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#F3F3F3\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"50ch\",\r\n    },\r\n  },\r\n  profielSection: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    right: \"25px\",\r\n  },\r\n}));\r\nconst NavBar = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar} elevation={0}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n          {props.caption} \r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classes.profielSection}\r\n            onClick={() => {\r\n              history.push(\"/Home/Profile\", { from: \"NavBar\" });\r\n            }}\r\n          >\r\n            <Avatar alt=\"Remy Sharp\" src={props.user.avatar} />\r\n            <Typography style={{ paddingLeft: \"10px\" }}>\r\n              {props.user.name}\r\n            </Typography>\r\n          </div>\r\n        </Toolbar>\r\n        <Divider />\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\nexport default NavBar;\r\n",{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":1,"column":15,"nodeType":"242","messageId":"243","endLine":1,"endColumn":24},{"ruleId":"240","severity":1,"message":"244","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"245","severity":1,"message":"246","line":117,"column":11,"nodeType":"247","endLine":117,"endColumn":36},{"ruleId":"245","severity":1,"message":"246","line":91,"column":52,"nodeType":"247","endLine":91,"endColumn":59},{"ruleId":"240","severity":1,"message":"248","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":12},{"ruleId":"240","severity":1,"message":"249","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":18},{"ruleId":"240","severity":1,"message":"250","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":17},{"ruleId":"240","severity":1,"message":"251","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":19},{"ruleId":"240","severity":1,"message":"252","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":18},{"ruleId":"240","severity":1,"message":"253","line":43,"column":9,"nodeType":"242","messageId":"243","endLine":43,"endColumn":16},{"ruleId":"240","severity":1,"message":"254","line":80,"column":9,"nodeType":"242","messageId":"243","endLine":80,"endColumn":22},{"ruleId":"255","severity":1,"message":"256","line":83,"column":15,"nodeType":"257","messageId":"258","endLine":83,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":93,"column":48,"nodeType":"247","endLine":93,"endColumn":55},{"ruleId":"259","severity":1,"message":"260","line":61,"column":5,"nodeType":"261","messageId":"258","endLine":61,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":112,"column":6,"nodeType":"264","endLine":112,"endColumn":8,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"256","line":127,"column":15,"nodeType":"257","messageId":"258","endLine":127,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":177,"column":11,"nodeType":"268","endLine":177,"endColumn":63},{"ruleId":"259","severity":1,"message":"269","line":69,"column":5,"nodeType":"261","messageId":"258","endLine":69,"endColumn":12},{"ruleId":"266","severity":1,"message":"267","line":256,"column":17,"nodeType":"268","endLine":256,"endColumn":69},{"ruleId":"255","severity":1,"message":"256","line":306,"column":44,"nodeType":"257","messageId":"258","endLine":306,"endColumn":46},{"ruleId":"240","severity":1,"message":"253","line":49,"column":11,"nodeType":"242","messageId":"243","endLine":49,"endColumn":18},{"ruleId":"240","severity":1,"message":"270","line":142,"column":13,"nodeType":"242","messageId":"243","endLine":142,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":142,"column":44,"nodeType":"273","messageId":"274","endLine":142,"endColumn":46},{"ruleId":"262","severity":1,"message":"275","line":156,"column":6,"nodeType":"264","endLine":156,"endColumn":8,"suggestions":"276"},{"ruleId":"240","severity":1,"message":"277","line":158,"column":9,"nodeType":"242","messageId":"243","endLine":158,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":161,"column":7,"nodeType":"268","endLine":161,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":168,"column":54,"nodeType":"247","endLine":168,"endColumn":61},{"ruleId":"245","severity":1,"message":"246","line":209,"column":54,"nodeType":"247","endLine":209,"endColumn":61},{"ruleId":"240","severity":1,"message":"278","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":57,"column":5,"nodeType":"261","messageId":"258","endLine":57,"endColumn":13},{"ruleId":"240","severity":1,"message":"279","line":94,"column":10,"nodeType":"242","messageId":"243","endLine":94,"endColumn":17},{"ruleId":"240","severity":1,"message":"280","line":95,"column":10,"nodeType":"242","messageId":"243","endLine":95,"endColumn":20},{"ruleId":"262","severity":1,"message":"281","line":114,"column":6,"nodeType":"264","endLine":114,"endColumn":8,"suggestions":"282"},{"ruleId":"255","severity":1,"message":"256","line":129,"column":15,"nodeType":"257","messageId":"258","endLine":129,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":181,"column":11,"nodeType":"268","endLine":194,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":92,"column":15,"nodeType":"257","messageId":"258","endLine":92,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":108,"column":11,"nodeType":"247","endLine":108,"endColumn":18},{"ruleId":"240","severity":1,"message":"285","line":116,"column":15,"nodeType":"242","messageId":"243","endLine":116,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":79,"column":7,"nodeType":"268","endLine":79,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":86,"column":50,"nodeType":"247","endLine":86,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":83,"column":48,"nodeType":"247","endLine":83,"endColumn":55},{"ruleId":"259","severity":1,"message":"286","line":98,"column":5,"nodeType":"261","messageId":"258","endLine":98,"endColumn":12},{"ruleId":"287","severity":1,"message":"288","line":24,"column":1,"nodeType":"289","endLine":80,"endColumn":2},{"ruleId":"259","severity":1,"message":"286","line":98,"column":5,"nodeType":"261","messageId":"258","endLine":98,"endColumn":12},{"ruleId":"245","severity":1,"message":"246","line":115,"column":11,"nodeType":"247","endLine":115,"endColumn":36},{"ruleId":"240","severity":1,"message":"278","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":57,"column":5,"nodeType":"261","messageId":"258","endLine":57,"endColumn":13},{"ruleId":"240","severity":1,"message":"279","line":94,"column":10,"nodeType":"242","messageId":"243","endLine":94,"endColumn":17},{"ruleId":"240","severity":1,"message":"280","line":95,"column":10,"nodeType":"242","messageId":"243","endLine":95,"endColumn":20},{"ruleId":"262","severity":1,"message":"281","line":114,"column":6,"nodeType":"264","endLine":114,"endColumn":8,"suggestions":"290"},{"ruleId":"255","severity":1,"message":"256","line":129,"column":15,"nodeType":"257","messageId":"258","endLine":129,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":181,"column":11,"nodeType":"268","endLine":194,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":92,"column":15,"nodeType":"257","messageId":"258","endLine":92,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":108,"column":11,"nodeType":"247","endLine":108,"endColumn":18},{"ruleId":"245","severity":1,"message":"246","line":83,"column":48,"nodeType":"247","endLine":83,"endColumn":55},{"ruleId":"240","severity":1,"message":"270","line":142,"column":13,"nodeType":"242","messageId":"243","endLine":142,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":142,"column":44,"nodeType":"273","messageId":"274","endLine":142,"endColumn":46},{"ruleId":"262","severity":1,"message":"275","line":156,"column":6,"nodeType":"264","endLine":156,"endColumn":8,"suggestions":"291"},{"ruleId":"240","severity":1,"message":"277","line":158,"column":9,"nodeType":"242","messageId":"243","endLine":158,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":161,"column":7,"nodeType":"268","endLine":161,"endColumn":28},{"ruleId":"245","severity":1,"message":"246","line":168,"column":54,"nodeType":"247","endLine":168,"endColumn":61},{"ruleId":"245","severity":1,"message":"246","line":209,"column":54,"nodeType":"247","endLine":209,"endColumn":61},{"ruleId":"259","severity":1,"message":"269","line":69,"column":5,"nodeType":"261","messageId":"258","endLine":69,"endColumn":12},{"ruleId":"266","severity":1,"message":"267","line":256,"column":17,"nodeType":"268","endLine":256,"endColumn":69},{"ruleId":"255","severity":1,"message":"256","line":306,"column":44,"nodeType":"257","messageId":"258","endLine":306,"endColumn":46},{"ruleId":"259","severity":1,"message":"260","line":61,"column":5,"nodeType":"261","messageId":"258","endLine":61,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":112,"column":6,"nodeType":"264","endLine":112,"endColumn":8,"suggestions":"292"},{"ruleId":"255","severity":1,"message":"256","line":127,"column":15,"nodeType":"257","messageId":"258","endLine":127,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":177,"column":11,"nodeType":"268","endLine":177,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":93,"column":48,"nodeType":"247","endLine":93,"endColumn":55},{"ruleId":"240","severity":1,"message":"253","line":38,"column":9,"nodeType":"242","messageId":"243","endLine":38,"endColumn":16},{"ruleId":"240","severity":1,"message":"254","line":75,"column":9,"nodeType":"242","messageId":"243","endLine":75,"endColumn":22},{"ruleId":"240","severity":1,"message":"285","line":116,"column":15,"nodeType":"242","messageId":"243","endLine":116,"endColumn":21},{"ruleId":"240","severity":1,"message":"244","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'renderArticle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["295"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Duplicate key 'display'.","'l' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'statistic'. Either include it or remove the dependency array. You can also do a functional update 'setStatistic(s => ...)' if you only need 'statistic' in the 'setStatistic' call.",["296"],"'emptyResult' is assigned a value but never used.","'Divider' is defined but never used.","'results' is assigned a value but never used.","'instructor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array. You can also do a functional update 'setContent(c => ...)' if you only need 'content' in the 'setContent' call.",["297"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'setErr' is assigned a value but never used.","Duplicate key 'errName'.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["298"],["299"],["300"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"303","fix":"308"},{"desc":"301","fix":"309"},"Update the dependencies array to be: [props.match.params.id]",{"range":"310","text":"311"},"Update the dependencies array to be: [statistic]",{"range":"312","text":"313"},"Update the dependencies array to be: [content]",{"range":"314","text":"315"},{"range":"316","text":"315"},{"range":"317","text":"313"},{"range":"318","text":"311"},[3266,3268],"[props.match.params.id]",[4808,4810],"[statistic]",[3165,3167],"[content]",[3168,3170],[4814,4816],[3269,3271]]